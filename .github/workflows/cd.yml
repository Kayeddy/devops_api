name: CD

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests with production coverage threshold
      run: |
        sed -i 's/branches: 60/branches: 85/' jest.config.js
        sed -i 's/functions: 60/functions: 85/' jest.config.js
        sed -i 's/lines: 60/lines: 85/' jest.config.js
        sed -i 's/statements: 60/statements: 85/' jest.config.js
        npm test
      env:
        CI: true
        MONGODB_URI: mongodb://localhost:27017/test
    
    - name: Build Docker image
      run: docker build -t devops-api .
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract repository name to lowercase
      run: |
        echo "REPO_NAME=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
    
    - name: Push Docker image
      run: |
        IMAGE_ID=ghcr.io/${{ env.REPO_NAME }}/devops-api
        VERSION=${GITHUB_REF#refs/tags/}
        VERSION=$(echo $VERSION | sed -e 's/^v//')
        docker tag devops-api $IMAGE_ID:$VERSION
        docker tag devops-api $IMAGE_ID:latest
        docker push $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:latest
    
    # Notify about the new version
    - name: Notify about new version
      run: |
        echo "New version $VERSION has been published to GitHub Container Registry"
        echo "Railway will automatically deploy this version based on repository integration" 