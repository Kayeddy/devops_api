name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
      env:
        CI: true
        MONGODB_URI: mongodb://localhost:27017/test
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract repository name to lowercase
      run: |
        echo "REPO_NAME=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
    
    - name: Extract version
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAGS=ghcr.io/${{ env.REPO_NAME }}/devops-api:$VERSION,ghcr.io/${{ env.REPO_NAME }}/devops-api:latest" >> $GITHUB_ENV
          
          # For version tags, use stricter test coverage thresholds
          sed -i 's/branches: 60/branches: 85/' jest.config.js
          sed -i 's/functions: 60/functions: 85/' jest.config.js
          sed -i 's/lines: 60/lines: 85/' jest.config.js
          sed -i 's/statements: 60/statements: 85/' jest.config.js
        else
          echo "VERSION=latest" >> $GITHUB_ENV
          echo "TAGS=ghcr.io/${{ env.REPO_NAME }}/devops-api:latest,ghcr.io/${{ env.REPO_NAME }}/devops-api:${{ github.sha }}" >> $GITHUB_ENV
        fi
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        target: production
        tags: ${{ env.TAGS }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Notify about successful build
      run: |
        echo "Docker image has been built and pushed to GitHub Container Registry"
        echo "GitHub image is available at: ghcr.io/${{ env.REPO_NAME }}/devops-api:${{ env.VERSION || github.sha }}"
        echo "Deployment will be handled automatically by Railway's GitHub integration" 